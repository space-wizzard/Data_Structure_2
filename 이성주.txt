int main() {
	char* ptrArray[2];
	char** ptrptr;
	int i;

	ptrArray[0] = "Korea";
	ptrArray[1] = "Seoul";

	ptrptr = ptrArray;

	printf("ptrArray[0]의 주소(&ptrArray[0])=%p\n", &ptrArray[0]);
	printf("ptrArray[0]의 값(ptrArray[0])=%p\n", ptrArray[0]);
	printf("ptrArray[0]의 참조값(*ptrArray[0])=%c\n", *ptrArray[0]);
	printf("ptrArray[0]의 참조 문자열(*ptrArray[0])=%s\n", *ptrArray);

	printf("ptrArray[1]의 주소 (&ptrArray[1]=%p\n", &ptrArray[1]);
	printf("ptrArray[1]의 값 (&ptrArray[1]=%p\n", ptrArray[1]);
	printf("ptrArray[1]의 참조값 (&ptrArray[1]=%c\n", *ptrArray[1]);
	printf("ptrArray[1]의 참조 문자열 (&ptrArray[1]=%s\n", *(ptrArray+1));


	printf("ptrptr의 주소(&ptrptr) = %p\n", &ptrptr);
	printf("ptrptr의 값(ptrptr) = %p\n", ptrptr);	//ptrptr에는 ptrArray의 주소값(&ptrArray[0])이 포함되어 있다.
	printf("ptrptr의 1차 참조값(*ptrptr) = %p\n", *ptrptr);	//참조값은 ptrArray의 값(ptrArray[0])이 포함되어 있다.
	printf("ptrptr의 2차 참조값(**ptrptr) = %c\n", **ptrptr);
	printf("ptrptr의 2차 참조 문자열(**ptrptr)=%s\n", *ptrptr);

	printf("*ptrArray[0]: ");
	for (i = 0; i < 5; i++)
		printf("%c ", *(ptrArray[0] + i));
	printf("\n**ptrptr: ");
	for (i = 0; i < 5; i++) 
		printf("%c ", *(*ptrptr + i));
	printf("\n\n*ptrArray[1]: ");
	for (i = 0; i < 5; i++)
		printf("%c ", *(ptrArray[1] + i));
	printf("\n **(ptrptr+1):");
	for (i = 0; i < 5; i++) {
		printf("%c ", *(*(ptrptr + 1) + i));
	}


}
// 배열 원소의 시작 주소를 구하는 방법은 행 우선 순서, 열 우선 순서 방법으로 나뉜다. 행 우선 순서 방법의 경우, 시작 주소가 a, 원소 길이가 l, i행 j열 원소라면, a+(i-1*(행의 개수)+j-1)*l
열 우선 순서 방법의 경우,  a+(j-1*(행의 개수)+i-1)*l